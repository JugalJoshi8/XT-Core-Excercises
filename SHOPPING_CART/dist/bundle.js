!function(t){var e={};function n(i){if(e[i])return e[i].exports;var s=e[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(i,s,function(e){return t[e]}.bind(null,s));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);class i{getShoppingCartItems(){return fetch("json-data/ShoppingCart.json").then(t=>t.json())}}class s{constructor(t,e,n){this.parentSelector=t,this.parent=$(t),this.params=n,this.childComponent=e,this.render()}render(){this.parent.append("\n            <div class = 'overlay'>\n                <div class= 'overlay__content'>\n                    <div class = 'overlay__close font-xl color-light'>&#10006;</div>\n                    <div class = 'overlay__child'>\n                    </div>\n                </div>\n            </div>\n        "),new this.childComponent(`${this.parentSelector} .overlay__child`,this.params),$(".overlay__close").click(t=>this.parent.hide())}}class a{constructor(t,e){this.parent=$(t),this.item=e,this.render()}render(){const t=`\n            <div class = 'edit-item'>\n                <form class = 'edit-item__form'>\n                    <div class = 'cart-item__name' >${this.item.name}</div>\n                    <div class = 'cart-item__price'>\n                        <span class = 'cart-item__currency'>${this.item.currency}</span>\n                        ${this.item.price}\n                    </div>\n                </form>\n                <div class = 'edit-item__image'>\n                    <img src = 'imgs/${this.item.imgName}' class = 'cart-item__img' alt = 'cloth'>\n                </div>\n            </div>\n        `;this.parent.append(t)}}class r{constructor(t,e){this.parent=$(t),this.item=e,this.render()}render(){const t=`\n        <div class = 'cart-container' id = 'cart-${this.item.id}'>\n            <div class = 'cart-item cart-item--mobile'>\n                <div class = 'cart-item__img'>\n                    <img src = 'imgs/${this.item.imgName}' class = 'cart-item__img' alt = 'cloth'>\n                </div>\n                <div class = 'cart-item__desc'>\n                    <div class = 'cart-item__name' >${this.item.name}</div>\n                    <div class = 'cart-item__style'>Style #: ${this.item.styleId}</div>\n                    <div class = 'cart-item__color'>Colour: ${this.item.color}</div>\n                    <div class = 'cart-item__size'>Size: ${this.item.size}</div>\n                    <div class = 'cart-item__quantity'>QTY: <span class = 'cart-item__quantity--number'>${this.item.quantity}<span></div>\n                    <div class = 'cart-item__price'>\n                        <span class = 'cart-item__currency'>${this.item.currency}</span>\n                        ${this.item.price}\n                    </div>\n                </div>\n            </div>\n            <div class = 'cart-item cart-item--desktop'>\n                <div class = 'cart-item__img'>\n                    <img src = 'imgs/${this.item.imgName}' class = 'cart-item__img' alt = 'cloth'>\n                </div>\n                <div class = 'cart-item__desc'>\n                    <div class = 'cart-item__desc__txt'>\n                        <div class = 'cart-item__name' >${this.item.name}</div>\n                        <div class = 'cart-item__style'>Style #: ${this.item.styleId}</div>\n                        <div class = 'cart-item__color'>Colour: ${this.item.color}</div>\n                    </div>\n                    <div class = 'cart-item__buttons cart-item__buttons--desktop'>\n                        <button id = 'editDesktop' class = 'button cart-item__button'>Edit</button>\n                        <button id = 'editDesktop' class = 'button cart-item__button'>Remove</button>\n                        <button id = 'editDesktop' class = 'button cart-item__button'>Save for Later</button>\n                    </div>\n                </div>\n                <div class = 'cart-item__size'>${this.item.size}</div>\n                <div class = 'cart-item__quantity'>${this.item.quantity}</div>\n                <div class = 'cart-item__price'>\n                    <span class = 'cart-item__currency'>${this.item.currency}</span>\n                    ${this.item.price}\n                </div>\n            </div>\n            <div class = 'cart-item__buttons cart-item__buttons--mobile'>\n                <button id = 'editMobile' class = 'button cart-item__button'>Edit</button>\n                <button id = 'removeMobile' class = 'button cart-item__button'>Remove</button>\n                <button id = 'saveMobile' class = 'button cart-item__button'>Save for Later</button>\n            </div>\n            <div class = 'overlay-container'>\n            \n            </div>\n        </div>\n        `;this.parent.append(t),new s(`#cart-${this.item.id} .overlay-container`,a,this.item),this.element=$(`#cart-${this.item.id}`),this.overlay=this.element.find(".overlay-container"),this.element.find("#editMobile").click(t=>this.showOverlay()),this.element.find("#editDesktop").click(t=>this.showOverlay())}showOverlay(){console.log("asdasdas"),this.overlay.show()}}class o{render(){return"\n        <section class = 'order'>\n                      <ul class = 'order__items'>\n                        <li class = 'order__item'>\n                            <div class = 'order__item__name font-bold font-lg'>\n                                <div class = 'order__item__name__main'>\n                                    Subtotal\n                                </div>\n                                <div class = 'order__item__name__sub'>\n                                   \n                                </div>\n                            </div>\n                            <div class = 'order__item__value font-bold font-xl'><span class = 'font-sm'>$</span>37.00</div>\n                        </li>\n                        <li class = 'order__item'>\n                            <div class = 'order__item__name font-bold font-lg'>\n                                <div class = 'order__item__name__main'>\n                                    Estimated Shipping*\n                                </div>\n                                <div class = 'order__item__name__sub'>\n                                   You spent $50, so you qualify for free shipping*\n                                </div>\n                            </div>\n                            <div class = 'order__item__value order__item__value--free font-bold font-lg'>FREE</div>\n                        </li>\n                        <li class = 'order__item'>\n                            <div class = 'order__item__name font-bold font-lg'>\n                                <div class = 'order__item__name__main'>\n                                    Promotion Code\n                                </div>\n                                <div class = 'order__item__name__sub'>\n                                   JF10 APPLIED\n                                </div>\n                            </div>\n                            <div class = 'order__item__value font-bold font-xl'>-<span class = 'font-sm'>$</span>07.00</div>\n                        </li>\n                        <li class = 'order__item order__item--total'>\n                            <div class = 'order__item__name font-bold font-lg'>\n                                <div class = 'order__item__name__main'>\n                                    Estimated Total\n                                </div>\n                                <div class = 'order__item__name__sub'>\n                                    Tax will be applied during checkout\n                                </div>\n                            </div>\n                            <div class = 'order__item__value font-bold font-xl'><span class = 'font-sm'>$</span>07.00</div>\n                        </li>\n                      </ul>\n                      <div class = 'checkout__container'>\n                        <div class = 'checkout-button'>\n                            <button class = 'button button--blue'>Checkout</button>\n                        </div>\n                        <a class = 'font-lg continue-shopping' href = ''>Continue Shopping</a>\n                      </div>\n                      <div class = 'secure-checkout'>\n                        <div class = 'secure-checkout__text font-lg'>Secure checkout. Shopping is always safe and secure</div>\n                        <img src = './imgs/secure.png' alt = 'secure'>\n                      </div>\n                      <div class = 'siginin-msg font-lg'>\n                        <a>SIGN IN</a> to save your cart and have access to your items in mobile, tablet and desktop.\n                      </div>\n            </section>\n                    "}}new class{constructor(t){this.parent=t,this.shoppingCartService=new i,this.render()}render(){return this.shoppingCartService.getShoppingCartItems().then(t=>{const e=t.cartItems;console.log(t);const n=`\n                <div class = 'shopping-cart'>\n                    <header class = 'shopping-cart__header'>\n                        <h1>YOUR SHOPPING BAG</h1>\n                        <h2 class = 'shopping-cart__header__items'>${e.length} ITEMS</h2>\n                        <div class = "shopping-cart__header__cols">\n                            <div><span class = 'font-bold'>${e.length}</span> ITEMS</div>\n                            <div>SIZE</div>\n                            <div>QTY</div>\n                            <div>PRICE</div>\n                        </div>\n                    </header>\n                    <section id = 'shopping-cart-items'>\n                    </section>\n                    <section class = 'order-help'>\n                        <section class= 'need-help'>\n                            <div class = 'color-light font-bold'>Need help or have questions?</div>\n                            <div class = 'color-lighter'>Call Customer Service at 1-800-555-5555</div>\n                            <a class = 'color-lighter'>Chat with one of our stylists</a>\n                            <a class = 'color-lighter'>See return and exchange policy</a>\n                        </section>\n                        <section>\n                            <section class = 'promo'>\n                                <h2 class = 'promo__header'>Enter Promotion code of the gift card</h2>\n                                <form class = 'promo__form' onsubmit = 'event.preventDefault()'>\n                                    <input class = 'promo__form__input' type = 'text'>\n                                    <input class = 'button promo__form__submit' type = 'submit' value = 'APPLY'>\n                                </form>\n                            </section>\n                            ${(new o).render()}\n                        </section>\n                    </section>\n                </div>\n            `;$(this.parent).html(n),e.forEach(t=>{new r("#shopping-cart-items",t)})})}}("#app")}]);